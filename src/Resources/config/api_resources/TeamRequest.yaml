resources:
    VideoGamesRecords\CoreBundle\Entity\TeamRequest:
        collectionOperations:
            get:
                normalization_context: {'groups': [teamRequest.read, player.read.mini, team.read.mini]}
            post:
                access_control: 'is_granted("ROLE_PLAYER")'
                denormalization_context: {'groups': [teamRequest.post]}
                normalization_context: {'groups': [teamRequest.read, player.read.mini, team.read.mini]}
        itemOperations:
            get:
                normalization_context: {'groups': [teamRequest.read, player.read.mini, team.read.mini]}
            put:
                access_control: 'is_granted("ROLE_PLAYER") and ((object.getTeam().getLeader().getUserId() == user.getId()) or (object.getPlayer().getUserId() == user.getId()))'
                denormalization_context: {'groups': [teamRequest.put]}
                normalization_context: {'groups': [teamRequest.read, player.read.mini, team.read.mini]}