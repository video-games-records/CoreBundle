resources:
    VideoGamesRecords\CoreBundle\Entity\PlayerChart:
        attributes:
            normalization_context: {'groups': [playerChart.read, playerChart.libs, playerChart.status]}
            denormalization_context: {'groups': [playerChart.write]}
        collectionOperations:
            get: ~
            post:
                normalization_context: {'groups': [playerChart.read, playerChart.status, playerChartStatus.read, playerChart.platform]}
                access_control: 'is_granted("ROLE_PLAYER")'
            maj-platform:
                method: 'POST'
                path: '/player-charts/maj-platform'
                access_control: 'is_granted("ROLE_USER")'
                swagger_context:
                    parameters:
                        - in: body
                          name: playerChart
                          schema:
                              type: object
                              required:
                                  - idGame
                                  - idPlatform
                              properties:
                                  idGame:
                                      type: integer
                                  idPlatform:
                                      type: integer
                controller: 'VideoGamesRecords\CoreBundle\Controller\PlayerChart\UpdatePlatform'
            send-picture:
                access_control: 'is_granted("ROLE_USER")'
                method: 'POST'
                path: '/player-charts/{id}/send-picture'
                consumes:
                    - application/json
                swagger_context:
                    parameters:
                        - name: id
                          in: path
                          required: true
                          type: integer
                        - in: body
                          name: file
                          description: Picture encoded in base64
                          schema:
                              type: object
                              required:
                                  - base64
                              properties:
                                  base64:
                                      type: string
                controller: 'VideoGamesRecords\CoreBundle\Controller\PlayerChart\SendPicture'
            send-video:
                access_control: 'is_granted("ROLE_USER")'
                method: 'POST'
                path: '/player-charts/{id}/send-video'
                consumes:
                    - application/json
                swagger_context:
                    parameters:
                        - name: id
                          in: path
                          required: true
                          type: integer
                        - in: body
                          name: url
                          description: Video URL
                          schema:
                              type: text
                controller: 'VideoGamesRecords\CoreBundle\Controller\PlayerChart\SendVideo'
        itemOperations:
            get:
                normalization_context: {'groups': [playerChart.read, playerChart.libs, playerChart.player, player.read.mini, playerChart.status, playerChartStatus.read, chart.label.read, playerChartLib.format, playerChart.proof, proof.read, picture.read, video.read]}
            put:
                denormalization_context: {'groups': [playerChart.write, playerChart.put]}
                normalization_context: {'groups': [playerChart.read, playerChart.status, playerChartStatus.read, playerChart.platform]}
                access_control: 'is_granted("ROLE_PLAYER") and (object.getPlayer().getUserId() == user.getId()) and ((object.getStatus().getId() == 1) or (object.getStatus().getId() == 6))'
                _api_receive: true